load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "test",
    srcs = [
        "cache.go",
        "client.go",
        "compressor.go",
        "env.go",
        "logger.go",
        "marshaller.go",
        "meta.go",
        "port.go",
        "server.go",
        "shutdowner.go",
        "status_server.go",
        "test.config.go",
        "token.go",
        "version.go",
    ],
    importpath = "github.com/wildr-inc/app/genesis/test",
    visibility = ["//visibility:public"],
    deps = [
        "//genesis/pkg/cache/redis",
        "//genesis/pkg/cache/redis/telemetry/metrics",
        "//genesis/pkg/cache/ristretto",
        "//genesis/pkg/cache/ristretto/telemetry/metrics",
        "//genesis/pkg/cmd",
        "//genesis/pkg/compressor",
        "//genesis/pkg/database/sql/config",
        "//genesis/pkg/database/sql/pg",
        "//genesis/pkg/debug",
        "//genesis/pkg/env",
        "//genesis/pkg/marshaller",
        "//genesis/pkg/meta",
        "//genesis/pkg/redis",
        "//genesis/pkg/security",
        "//genesis/pkg/telemetry/logger/zap",
        "//genesis/pkg/telemetry/tracer",
        "//genesis/pkg/transport",
        "//genesis/pkg/transport/grpc",
        "//genesis/pkg/transport/grpc/retry",
        "//genesis/pkg/transport/grpc/telemetry/tracer",
        "//genesis/pkg/transport/http",
        "//genesis/pkg/transport/http/retry",
        "//genesis/pkg/transport/http/telemetry/tracer",
        "//genesis/pkg/version",
        "//genesis/test/greet/v1:greet",
        "@com_github_dgraph_io_ristretto//:ristretto",
        "@com_github_go_redis_cache_v8//:cache",
        "@com_github_urfave_negroni_v3//:negroni",
        "@io_opentelemetry_go_otel_metric//:metric",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//credentials",
        "@org_uber_go_fx//:fx",
        "@org_uber_go_zap//:zap",
    ],
)
