//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/postgres"
)

var Ledger = newLedgerTable()

type ledgerTable struct {
	postgres.Table

	//Columns
	ID        postgres.ColumnString
	Page      postgres.ColumnString
	CreatedAt postgres.ColumnTimestampz
	UpdatedAt postgres.ColumnTimestampz

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type LedgerTable struct {
	ledgerTable

	EXCLUDED ledgerTable
}

// AS creates new LedgerTable with assigned alias
func (a *LedgerTable) AS(alias string) *LedgerTable {
	aliasTable := newLedgerTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newLedgerTable() *LedgerTable {
	return &LedgerTable{
		ledgerTable: newLedgerTableImpl("public", "ledger"),
		EXCLUDED:    newLedgerTableImpl("", "excluded"),
	}
}

func newLedgerTableImpl(schemaName, tableName string) ledgerTable {
	var (
		IDColumn        = postgres.StringColumn("id")
		PageColumn      = postgres.StringColumn("page")
		CreatedAtColumn = postgres.TimestampzColumn("created_at")
		UpdatedAtColumn = postgres.TimestampzColumn("updated_at")
		allColumns      = postgres.ColumnList{IDColumn, PageColumn, CreatedAtColumn, UpdatedAtColumn}
		mutableColumns  = postgres.ColumnList{PageColumn, CreatedAtColumn, UpdatedAtColumn}
	)

	return ledgerTable{
		Table: postgres.NewTable(schemaName, tableName, allColumns...),

		//Columns
		ID:        IDColumn,
		Page:      PageColumn,
		CreatedAt: CreatedAtColumn,
		UpdatedAt: UpdatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
