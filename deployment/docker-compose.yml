version: '3.8'

services:
  wildr-server:
    container_name: wildr-server
    image: 793433463428.dkr.ecr.us-west-2.amazonaws.com/dev/wildr-server:${CONTAINER_IMAGE_TAG:-latest}
    mem_limit: 600m
#    restart: on-failure:5
    restart: always
    ports:
      - 80:80
      - 9229:9229
    command: ./docker-server-entrypoint.sh
    volumes:
      - /var/app/current/tmp/uploads:/usr/src/app/uploads
      - '${EB_LOG_BASE_DIR:-/var/tmp}/wildr-server:/var/log/wildr-server'
      - '${EB_HEALTHD_LOG_BASE_DIR:-/var/log/nginx/healthd}:/var/log/healthd'
    links:
      - troll-server
      - dd-agent
    environment:
      - DD_AGENT_HOST=dd-agent
      - CONTAINER_NAME=wildr-server
      - LOG_DIR=/var/log/wildr-server
      - HEALTHD_LOG_DIR=/var/log/healthd
      - SERVER_HTTP_PORT=80
      - NODE_ENV=${WILDR_ENV:-development}
      - NODE_OPTIONS='--max_old_space_size=400'
      - DB_SYNC=false
      - LOG_REQUEST=true
      - UPLOAD_CLIENT=s3
      - AWS_REGION=us-west-2
      - EB_HEALTHD_LOG_BASE_DIR=/var/log/nginx/healthd
      - TROLL_SERVER_ENDPOINT=http://troll-server:7070/sentiment
      - WILDR_SERVICE_NAME=wildr-server
    # .env is generated by Elastic Beanstalk, don't provide one
    env_file:
      - .env
  troll-server:
    container_name: troll-server
    image: 793433463428.dkr.ecr.us-west-2.amazonaws.com/dev/wildr-server:${TROLL_SERVER_IMAGE_TAG:-troll-server}
    mem_limit: 1800m
#    restart: on-failure:5
    restart: always
    ports:
      - 7070:7070
    links:
      - dd-agent
    command: ./docker-entrypoint.sh
    volumes:
      - /var/app/current/tmp/uploads:/usr/src/app/uploads
      - '${EB_LOG_BASE_DIR:-/var/log}/wildr-scorer:/var/log/wildr-scorer'
    environment:
      - CONTAINER_NAME=troll-server
      - LOG_DIR=/var/log/troll-server
      - SERVER_HTTP_PORT=80
      - NODE_ENV=${WILDR_ENV:-development}
      - NODE_OPTIONS='--max_old_space_size=400'
      - DB_SYNC=false
      - LOG_REQUEST=true
      - UPLOAD_CLIENT=s3
      - AWS_REGION=us-west-2
      - TROLL_SCORER_LOCALHOST=0.0.0.0
      - TROLL_SCORER_PORT=7070
      - WILDR_SERVICE_NAME=troll-server
    # .env is generated by Elastic Beanstalk, don't provide one
    env_file:
      - .env
  wildr-worker:
    container_name: wildr-worker
    image: 793433463428.dkr.ecr.us-west-2.amazonaws.com/dev/wildr-server:${CONTAINER_IMAGE_TAG:-latest}
    mem_limit: 512m
#    restart: on-failure:5
    restart: always
    ports:
      - 90:90
    links:
      - troll-server
      - dd-agent
    command: ./docker-worker-entrypoint.sh
    volumes:
      - '${EB_LOG_BASE_DIR:-/var/tmp}/wildr-worker:/var/log/wildr-worker'
    environment:
      - CONTAINER_NAME=wildr-worker
      - LOG_DIR=/var/log/wildr-worker
      - HEALTHD_LOG_DIR=/var/log/healthd
      - WORKER_HTTP_PORT=90
      - NODE_ENV=development
      - NODE_OPTIONS='--max_old_space_size=400'
      - DB_SYNC=false
      - LOG_REQUEST=true
      - UPLOAD_CLIENT=s3
      - AWS_REGION=us-west-2
      - EB_HEALTHD_LOG_BASE_DIR=/var/log/nginx/healthd
      - TROLL_SERVER_ENDPOINT=http://troll-server:7070/sentiment
      - WILDR_SERVICE_NAME=wildr-worker
    # .env is generated by Elastic Beanstalk, don't provide one
    env_file:
      - .env
  dd-agent:
    container_name: dd-agent
    image: public.ecr.aws/datadog/agent:7
    restart: always
    mem_limit: 512m
    volumes:
      - '${EB_LOG_BASE_DIR:-/var/tmp}/dd-agent:/var/log/datadog'
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: false
      - type: bind
        source: /proc
        target: /host/proc
        read_only: true
      - type: bind
        source: /sys/fs/cgroup
        target: /host/sys/fs/cgroup
        read_only: true
    ports:
      - 8126:8126
      - 4318:4318
    environment:
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
      - DD_OTLP_CONFIG_RECEIVER_PROTOCOLS_HTTP_ENDPOINT=0.0.0.0:4318
    env_file:
      - .env
